# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Assets.at(path="/public", file="index.html")

POST    /login                      controllers.Application.authenticate()
GET     /logout                     controllers.Application.logout()

GET     /image/:uri                 controllers.account.settings.Account.getImage(uri:String)

GET     /settings/user/:id          controllers.account.settings.Account.getUser(id:Long)
POST    /settings/password          controllers.account.settings.Password.runPassword()
POST    /settings/email             controllers.account.settings.Email.runEmail()
POST    /settings/account           controllers.account.settings.Account.save()
POST    /settings/mac               controllers.account.settings.Account.changeMac()
POST    /settings/notifs            controllers.account.settings.Notifs.save()
GET     /settings/lien/remove/:id   controllers.account.settings.Account.deleteLink(id:Long)

# Registers the user, sending an email to confirm the account.
POST    /signup                     controllers.account.Signup.save()

# Accessed when the user confirms the registration.
GET     /confirm/:confirmToken      controllers.account.Signup.confirm(confirmToken:String)

# Displays a page to send a reset email given the user's email.
POST    /reset/ask                  controllers.account.Reset.runAsk()

# Resets the password using the password.
POST    /reset/:token               controllers.account.Reset.runReset(token:String)

GET     /email/:token               controllers.account.settings.Email.validateEmail(token:String)

POST    /admin/submitusers          controllers.Admin.submitUsers()
GET     /admin/vote                 controllers.Admin.getVoteStatus()
POST    /admin/vote/:newStatus      controllers.Admin.changeVoteStatus(newStatus:String)

POST    /talks/:idTalk/comment      controllers.talks.TalkRestController.saveComment(idTalk:Long)
POST    /talks/:idTalk/comment/:idComment/response      controllers.talks.TalkRestController.saveReponse(idTalk:Long,idComment:Long)
POST    /talks/:idTalk/comment/:idComment/close      controllers.talks.TalkRestController.closeComment(idTalk:Long,idComment:Long)
POST    /talks/:idTalk/comment/:idComment/delete      controllers.talks.TalkRestController.deleteComment(idTalk:Long,idComment:Long)
POST    /talks/:idTalk/comment/:idComment/edit      controllers.talks.TalkRestController.editComment(idTalk:Long,idComment:Long)
POST    /talks/:idTalk/status       controllers.talks.TalkRestController.saveStatus(idTalk:Long)
POST    /talks/:idTalk/vote/:note   controllers.talks.TalkRestController.saveVote(idTalk:Long,note:java.lang.Integer)
GET		/talk/all					controllers.talks.TalkRestController.all()
GET		/talk/:idTalk				controllers.talks.TalkRestController.getById(idTalk:Long)
GET		/talk						controllers.talks.TalkRestController.get()
POST	/talk						controllers.talks.TalkRestController.save()
DELETE	/talk/:idTalk 				controllers.talks.TalkRestController.delete(idTalk:Long)
GET	/talk/:idTalk/tags/:tags 	    controllers.talks.TalkRestController.addTag(idTalk:Long,tags:String)
POST	/talk/:idTalk/tags/:tags 	controllers.talks.TalkRestController.addTag(idTalk:Long,tags:String)

GET		/creneau/:idCreneau			controllers.CreneauRestController.get(idCreneau:Long)
GET		/creneau					controllers.CreneauRestController.all()
POST	/creneau					controllers.CreneauRestController.save()
DELETE	/creneau/:idCreneau 		controllers.CreneauRestController.delete(idCreneau:Long)

GET		/dynamicfield/:idDynamicField   controllers.DynamicFieldRestController.get(idDynamicField:Long)
GET		/dynamicfield					controllers.DynamicFieldRestController.all()
POST	/dynamicfield					controllers.DynamicFieldRestController.save()
DELETE	/dynamicfield/:idDynamicField   controllers.DynamicFieldRestController.delete(idDynamicField:Long)

GET		/user/:userId/talks			controllers.talks.TalkRestController.getTalks(userId:Long)
GET		/user/:userId/talks/:status	controllers.talks.TalkRestController.getTalksByStatus(userId:Long,status:String)

GET     /user/:id                   controllers.UserRestController.getUser(id:Long)

GET     /admin/users/get            controllers.UserRestController.get()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


